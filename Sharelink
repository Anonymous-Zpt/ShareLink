#!/bin/bash
g="${b}\033[1;30m"
b="\033[0m"
b1="$b\033[1;37m"
r="${b}\033[1;31m"
r1="${b}\033[31m"
A="${b}\033[1;34m"
A1="${b}\033[34m"
ac="${b}\e[1;36m"
ac1="${b}\e[36m"
v="${b}\033[1;32m"
v1="${b}\033[32m"
m="$b\033[1;35m"
m1="$b\033[35m"
a="$b\033[1;33m"
a1="$b\033[33m"
cy="$b\033[38;2;23;147;209m"
HOME='/data/data/com.termux/files/home'
azar=$(shuf -i 3000-9999 -n 1)
trap Adios INT
Adios() {
		sleep 0.2
		echo -e "\n${v}\n[$b1+$v]$b1 Finished\n$v[$b1+$v]$b1 Created by Anonymous Zpt\n$v[$b1+$v]$b1 Gracias por usar mi herramienta\n$v[$b1+$v]$b1 servicio de ayuda https://t.me/Anonymous_Zpt$b\n"
		sleep 0.0
		exit
	}
		VERIFICAR_NGROK=$(ps aux | grep -o "ngrok" | head -n1)
		VERIFICAR_PHP=$(ps aux | grep -o "php" | head -n1)
		VERIFICAR_SSH=$(ps aux | grep -o "ssh" | head -n1)
		if [[ $VERIFICAR_NGROK == *'ngrok'* ]]; then
		pkill -f -2 ngrok > /dev/null 2>&1
		killall -2 ngrok > /dev/null 2>&1
		fi
		if [[ $VERIFICAR_PHP == *'php'* ]]; then
		pkill -f -2 php > /dev/null 2>&1
		killall -2 php > /dev/null 2>&1
		fi
		if [[ $VERIFICAR_SSH == *'ssh'* ]]; then
		pkill -f -2 ssh > /dev/null 2>&1
		killall ssh > /dev/null 2>&1
		fi
banner() {
		clear
		echo -e "$v  ▄▄▄▄  █                           ▄        ▀           █\n █▀   ▀ █ ▄▄    ▄▄▄    ▄ ▄▄   ▄▄▄   █      ▄▄▄    ▄ ▄▄   █   ▄\n ▀█▄▄▄  █▀  █  ▀   █   █▀  ▀ █▀  █  █        █    █▀  █  █ ▄▀\n     ▀█ █   █  ▄▀▀▀█   █     █▀▀▀▀  █        █    █   █  █▀█\n ▀▄▄▄█▀ █   █  ▀▄▄▀█   █     ▀█▄▄▀  █▄▄▄▄▄ ▄▄█▄▄  █   █  █  ▀▄$b\n "
		sleep 0.1
	}
ruta() {
                banner
                printf "${b1}Ejemplo: ~/storage/shared/Download $b\n"
                printf "${v}Digite la$r1 ruta${v}\n└═>$b "
                read ruta
		if [ $(echo "$ruta" | grep -o '$HOME') ]; then
		ruta=$(echo -e "/data/data/com.termux/files/home$ruta" |sed 's/$HOME//')
		elif [ $(echo "$ruta" | grep -o "~") ]; then
		ruta=$(echo -e "/data/data/com.termux/files/home$ruta" |sed 's/~//')
		elif [ $(echo "$ruta" | grep -o "/sdcard") ]; then
                ruta=$(echo -e "/data/data/com.termux/files/home/storage/shared$ruta" |sed 's/sdcard//')
		else
		if [ ! -e $ruta ]; then
		echo -e "${r1}[—] Error Ruta No Existe$b"
		sleep 1
		ruta
		fi
                fi
		if [ ! -e $ruta ]; then
                echo -e "${r1}[—] Error Ruta No Existe$b"
                sleep 1
                ruta
                fi
	}
nombre() {
		banner
                printf "${b1}Ejemplo: Archivo.txt $b\n"
                printf "${v}Digite el nombre del$r1 archivo${v}\n└═>$b "
		read nombre
		case $nombre in
		"")
		echo -e "${r1}[—] Error Archivo No Existe$b"
		sleep 1
		nombre
		;;
		*)
		if [ ! -e $ruta/$nombre ]; then
                echo -e "${r1}[—] Error Archivo No Existe$b"
                sleep 1
                nombre
                fi
		esac
	}
		ruta
		nombre
		if [ -e .localhost ]; then
		rm -rf .localhost
		fi
		if [ -e .ngrok ]; then
                rm -rf .ngrok
                fi
		echo -e "$azar" >> .localhost
		php -S 127.0.0.1:$(cat .localhost) -t $ruta > /dev/null 2>&1 &
		./ngrok http 127.0.0.1:$(cat .localhost) > /dev/null 2>&1 &
		curl -s -N http://127.0.0.1:4041/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io" > .ngrok
		echo
		sleep 0.5
		echo -e "$v1[$b1+$v1]$b Obteniendo URLs.."
		sleep 5
		echo -e "$v1[$b1+$v1]$b Servicio de ayuda =$v1 https://t.me/Anonymous_Zpt$b"
ngrok() {
		case $(ping -c 1 -q www.google.com >&/dev/null; echo $?) in
		0)
		case $(cat .ngrok) in
		"")
		curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io" > .ngrok
		ngrok
		;;
		*)
		sleep 0.5
                echo -e "$v1[$b1+$v1]$b Envia =$v1 http://localhost:$(cat .localhost)/${nombre}$b"
		sleep 0.5
		echo -e "$v1[$b1+$v1]$b Envia =$v1 $(cat .ngrok)/$nombre$b\n\n "
		esac
		;;
		*)
		sleep 0.5
                echo -e "$v1[$b1+$v1]$b Envia =$v1 http://localhost:$(cat .localhost)/${nombre}$b\n "
		esac
	}
		ngrok
		sleep 0.7
		if [ -e .localhost ]; then
                rm -rf .localhost
                fi
                if [ -e .ngrok ]; then
                rm -rf .ngrok
		fi
